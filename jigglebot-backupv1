import time
import threading
import ctypes
from pystray import Icon, MenuItem, Menu
from PIL import Image, ImageDraw
import os
import sys
import win32com.client

# after changes, run rebundle.ps1

# Global variables
paused = False
stop_event = threading.Event()


def add_to_startup():
    startup_dir = os.path.join(os.getenv('APPDATA'), 'Microsoft\\Windows\\Start Menu\\Programs\\Startup')
    exe_path = sys.executable
    shortcut_path = os.path.join(startup_dir, "JiggleBot.lnk")

    if not os.path.exists(shortcut_path):
        shell = win32com.client.Dispatch("WScript.Shell")
        shortcut = shell.CreateShortCut(shortcut_path)
        shortcut.Targetpath = exe_path
        shortcut.WorkingDirectory = os.path.dirname(exe_path)
        shortcut.IconLocation = exe_path
        shortcut.save()




# Windows idle time detection
class IdleTime:
    class LASTINPUTINFO(ctypes.Structure):
        _fields_ = [("cbSize", ctypes.c_uint), ("dwTime", ctypes.c_uint)]

    @staticmethod
    def get_idle_duration():
        lii = IdleTime.LASTINPUTINFO()
        lii.cbSize = ctypes.sizeof(IdleTime.LASTINPUTINFO)
        ctypes.windll.user32.GetLastInputInfo(ctypes.byref(lii))
        millis = ctypes.windll.kernel32.GetTickCount() - lii.dwTime
        return millis / 1000.0

# Simulate mouse movement
def simulate_mouse_move():
    ctypes.windll.user32.mouse_event(0x0001, 0, 1, 0, 0)

# Background thread
def monitor_idle():
    while not stop_event.is_set():
        if not paused and IdleTime.get_idle_duration() > 240:  # 4 minutes
            simulate_mouse_move()
        time.sleep(60)




# Tray icon setup
def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        base_path = sys._MEIPASS  # PyInstaller sets this at runtime
    except AttributeError:
        base_path = os.path.abspath(".")
    return os.path.join(base_path, relative_path)

def create_image():
    return Image.open(resource_path("tray_icon.png"))


def on_exit(icon, item):
    stop_event.set()
    icon.stop()

stop_event = threading.Event()
threading.Thread(target=monitor_idle, daemon=True).start()

icon = Icon("Jiggle Bot: Progammatic Mouse Jiggler")
icon.icon = create_image()

icon.menu = Menu(
    MenuItem("Start with Windows", lambda icon, item: add_to_startup()),
    MenuItem("Exit", on_exit)
)
add_to_startup()
icon.run()
